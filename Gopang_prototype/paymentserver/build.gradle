plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.palantir.docker' version '0.35.0'
}

group = 'com.gopang'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.0'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'org.springframework:spring-beans:6.0.13'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.security:spring-security-web:6.1.5'
	implementation 'org.springframework.boot:spring-boot-configuration-processor:3.1.5'

	// ==Spring Kafka ==//
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

	//== Spring Cloud ==//
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Micrometer
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
	name("gopang/${project.name}:${version}")
	dockerfile file('Dockerfile')
	files bootJar
	buildArgs(['JAR_FILE': bootJar.archiveFileName.get()])
}

tasks.named('test') {
	useJUnitPlatform()
}
